#include "unitconverter.h"
#include "units.h"


QString UnitConverter::convertToShortString(int unitInt)
{
    Units unit = Units(unitInt);
    switch (unit)
    {
        case Units::NONE:
            return "";
        case Units::PERCENT:
            return "%";
        case Units::RPM:
            return "";
        case Units::CELSIUS:
            return "ºC";
        case Units::KILOPASCAL:
            return "kPa";
        case Units::NEWTONMETER:
            return "N·M";
        case Units::LITRES:
            return "L";
        case Units::CUBICDM:
            return "dm³";
        case Units::KG:
            return "KG";
        case Units::LITRES_PER_HOUR:
            return "LH";
        case Units::CUBICDM_PER_HOUR:
            return "dm³H";
        case Units::KG_PER_HOUR:
            return "KGH";
        //temperature
        case Units::FAHRENHEIT:
            return "ºF";
        case Units::KELVIN:
            return "K";
        case Units::RANKINE:
            return "ºR";
        //pressure
        case Units::INHG:
            return "InHg";
        case Units::BAR:
            return "Bar";
        case Units::PSI:
            return "PSI";
        case Units::PASCAL_UNIT:
            return "P";
        case Units::MMHG:
            return "mmHg";
        case Units::CMHG:
            return "cmHg";
        case Units::ATM:
            return "Atm";
        case Units::PSF:
            return "PSF";
        case Units::MBAR:
            return "mBar";
        case Units::HECTOPASCAL:
            return "hPa";
        case Units::MMH2O:
            return "mmH₂O";
        case Units::CMH2O:
            return "cmH₂O";
        case Units::INH2O:
            return "InH₂O";
        //torque
        case Units::FOOTPOUND:
            return "Ft-lbs";
        case Units::INCHPOUND:
            return "In-lbs";
        //volume
        case Units::CUBICCM:
            return "cm³";
        case Units::CUBICCM_PER_HOUR:
            return "cm³H";
        case Units::ML:
            return "ml";
        case Units::ML_PER_HOUR:
            return "mlH";
        case Units::CUBICM:
            return "m³";
        case Units::CUBICM_PER_HOUR:
            return "m³H";
        case Units::CUBICIN:
            return "In³";
        case Units::CUBICIN_PER_HOUR:
            return "In³H";
        case Units::OZUS:
        case Units::OZUK:
            return "Oz";
        case Units::OZUS_PER_HOUR:
        case Units::OZUK_PER_HOUR:
            return "OzH";
        case Units::QUARTUS:
        case Units::QUARTUK:
            return "qt";
        case Units::QUARTUS_PER_HOUR:
        case Units::QUARTUK_PER_HOUR:
            return "qtH";
        case Units::CUBICFT:
            return "Ft³";
        case Units::CUBICFT_PER_HOUR:
            return "Ft³H";
        case Units::CUBICYD:
            return "Yd³";
        case Units::CUBICYD_PER_HOUR:
            return "Yd³H";
        case Units::USGAL:
        case Units::UKGAL:
            return "GAL";
        case Units::USGAL_PER_HOUR:
        case Units::UKGAL_PER_HOUR:
            return "GPH";
        // weight
        case Units::TONNE:
        case Units::USTONNE:
        case Units::UKTONNE:
            return "TONNE";
        case Units::TONNE_PER_HOUR:
        case Units::USTONNE_PER_HOUR:
        case Units::UKTONNE_PER_HOUR:
            return "TPH";
        case Units::SLUG:
            return "Slug";
        case Units::SLUG_PER_HOUR:
            return "SPH";
        case Units::GRAM:
            return "gr";
        case Units::GRAM_PER_HOUR:
            return "grH";
        case Units::LBS:
            return "lbs";
        case Units::LBS_PER_HOUR:
            return "PPH";
        //volume rate
        case Units::LITRES_PER_MINUTE:
            return "LPM";
        case Units::CUBICDM_PER_MINUTE:
            return "dm³M";
        case Units::CUBICCM_PER_MINUTE:
            return "cm³M";
        case Units::ML_PER_MINUTE:
            return "mlM";
        case Units::CUBICM_PER_MINUTE:
            return "m³M";
        case Units::CUBICIN_PER_MINUTE:
            return "In³M";
        case Units::OZUS_PER_MINUTE:
        case Units::OZUK_PER_MINUTE:
            return "OPM";
        case Units::QUARTUS_PER_MINUTE:
        case Units::QUARTUK_PER_MINUTE:
            return "QPM";
        case Units::CUBICFT_PER_MINUTE:
            return "Ft³M";
        case Units::CUBICYD_PER_MINUTE:
            return "Yd³M";
        case Units::USGAL_PER_MINUTE:
        case Units::UKGAL_PER_MINUTE:
            return "GPM";
        case Units::LITRES_PER_SECOND:
            return "LPS";
        case Units::CUBICDM_PER_SECOND:
            return "dm³S";
        case Units::CUBICCM_PER_SECOND:
            return "cm³S";
        case Units::ML_PER_SECOND:
            return "mlS";
        case Units::CUBICM_PER_SECOND:
            return "m³S";
        case Units::CUBICIN_PER_SECOND:
            return "In³S";
        case Units::OZUS_PER_SECOND:
        case Units::OZUK_PER_SECOND:
            return "OPS";
        case Units::QUARTUS_PER_SECOND:
        case Units::QUARTUK_PER_SECOND:
            return "QPS";
        case Units::CUBICFT_PER_SECOND:
            return "Ft³S";
        case Units::CUBICYD_PER_SECOND:
            return "Yd³S";
        case Units::USGAL_PER_SECOND:
        case Units::UKGAL_PER_SECOND:
            return "GPS";
        //weight rate
        case Units::KG_PER_MINUTE:
            return "KGM";
        case Units::TONNE_PER_MINUTE:
        case Units::USTONNE_PER_MINUTE:
        case Units::UKTONNE_PER_MINUTE:
            return "TPM";
        case Units::SLUG_PER_MINUTE:
            return "SPM";
        case Units::GRAM_PER_MINUTE:
            return "grM";
        case Units::LBS_PER_MINUTE:
            return "PPM";
        case Units::KG_PER_SECOND:
            return "KPS";
        case Units::TONNE_PER_SECOND:
        case Units::USTONNE_PER_SECOND:
        case Units::UKTONNE_PER_SECOND:
            return "TPS";
        case Units::SLUG_PER_SECOND:
            return "SPS";
        case Units::GRAM_PER_SECOND:
            return "grS";
        case Units::LBS_PER_SECOND:
            return "PPS";
    }
}

